{
    "openapi": "3.0.0",
    "info": {
        "title": "School Management API",
        "description": "API documentation for managing School resources",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:3000"
        },
        {
            "url": "https://t8finalproject-schoolapi.onrender.com"
        }
    ],
    "tags": [
        {
            "name": "Departments",
            "description": "Department management operations"
        },
        {
            "name": "Teachers",
            "description": "Teacher management operations"
        },
        {
            "name": "Courses",
            "description": "Course management operations"
        },
        {
            "name": "Students",
            "description": "Student management operations"
        }
    ],
    "paths": {
        "/courses/": {
            "get": {
                "tags": ["Courses"],
                "summary": "Get all courses",
                "description": "Retrieve all courses, optionally filtering by department or teacher.",
                "parameters": [
                    {
                        "name": "deptId",
                        "in": "query",
                        "description": "Filter by department ID",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "teacherId",
                        "in": "query",
                        "description": "Filter by teacher ID",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Courses retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CoursesResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/CoursesResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "tags": ["Courses"],
                "summary": "Create a new course",
                "description": "Create a new course in the database.",
                "responses": {
                    "201": {
                        "description": "Course created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CourseResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/CourseResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid or missing input data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required to create a course",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "409": {
                        "description": "Conflict - Course with specified ID already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorResponse"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CourseInput"
                            }
                        }
                    }
                }
            }
        },
        "/courses/{courseId}": {
            "get": {
                "tags": ["Courses"],
                "summary": "Get a course by ID",
                "description": "Retrieve a single course by its ID from the database.",
                "parameters": [
                    {
                        "name": "courseId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Course ID to retrieve"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Course retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CourseResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/CourseResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found - Course with specified ID does not exist",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "put": {
                "tags": ["Courses"],
                "summary": "Update an existing course",
                "description": "Update an existing course by its ID.",
                "parameters": [
                    {
                        "name": "courseId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Course updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CourseResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/CourseResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid or missing input data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required to update a course",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found - Course with specified ID does not exist",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CourseInput"
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Courses"],
                "summary": "Delete an existing course",
                "description": "Delete an existing course by its ID.",
                "parameters": [
                    {
                        "name": "courseId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Course ID to delete"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Course deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CourseResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/CourseResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required to delete a course",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found - Course with specified ID does not exist",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/departments/": {
            "get": {
                "tags": ["Departments"],
                "summary": "Get all departments",
                "description": "Retrieves all departments from the database.",
                "responses": {
                    "200": {
                        "description": "Departments retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DepartmentsResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/DepartmentsResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "tags": ["Departments"],
                "summary": "Create a new department",
                "description": "Create a new department in the database.",
                "responses": {
                    "201": {
                        "description": "Department created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DepartmentResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/DepartmentResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid or missing input data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required to create a department",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Department with specified ID already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorResponse"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DepartmentInput"
                            }
                        }
                    }
                }
            }
        },
        "/departments/{deptId}": {
            "get": {
                "tags": ["Departments"],
                "summary": "Get a department by ID",
                "description": "Retrieves a single department by its ID from the database.",
                "parameters": [
                    {
                        "name": "deptId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Deparment ID to retrieve"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Department retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DepartmentResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/DepartmentResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found - Department with specified ID does not exist",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "put": {
                "tags": ["Departments"],
                "summary": "Update an existing department",
                "description": "Update an existing department by its ID.",
                "parameters": [
                    {
                        "name": "deptId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Department updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DepartmentResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/DepartmentResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid or missing input data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required to update a department",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found - Department with specified ID does not exist",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DepartmentInput"
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Departments"],
                "summary": "Delete an existing department",
                "description": "Delete a department by its ID from the database.",
                "parameters": [
                    {
                        "name": "deptId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Deparment ID to delete"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Department deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DepartmentResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/DepartmentResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required to delete a department",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found - Department with specified ID does not exist",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/students/": {
            "get": {
                "tags": ["Students"],
                "summary": "Get all students",
                "description": "Retrieve all students, optionally filtering by enrollment status or major.",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter students by enrollment status (active, graduated, withdrawn)",
                        "required": false,
                        "enum": ["active", "graduated", "withdrawn"],
                        "default": "active",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "major",
                        "in": "query",
                        "description": "Filter students by major",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Students retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StudentsResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/StudentsResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "tags": ["Students"],
                "summary": "Create a new student",
                "description": "Create a new student in the database.",
                "responses": {
                    "201": {
                        "description": "Student created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StudentResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/StudentResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid or missing input data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User must be authenticated to create a student",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "409": {
                        "description": "Conflict - Student with specified ID or email already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorResponse"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StudentInput"
                            }
                        }
                    }
                }
            }
        },
        "/students/{studentId}": {
            "get": {
                "tags": ["Students"],
                "summary": "Get a student by ID",
                "description": "Retrieve a single student by their ID from the database.",
                "parameters": [
                    {
                        "name": "studentId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Student ID to retrieve"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Student retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StudentResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/StudentResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found - Student with specified ID does not exist",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "put": {
                "tags": ["Students"],
                "summary": "Update an existing student",
                "description": "Update an existing student by their ID.",
                "parameters": [
                    {
                        "name": "studentId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Student updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StudentResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/StudentResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid or missing input data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User must be authenticated to update a student",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found - Student with specified ID does not exist",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StudentInput"
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Students"],
                "summary": "Delete an existing student",
                "description": "Delete an existing student by their ID from the database.",
                "parameters": [
                    {
                        "name": "studentId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Student ID to delete"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Student deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/StudentResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/StudentResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - User must be authenticated to delete a student",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found - Student with specified ID does not exist",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/teachers/": {
            "get": {
                "tags": ["Teachers"],
                "summary": "Get all teachers",
                "description": "Retrieve all teachers, optionally filtering by department ID.",
                "parameters": [
                    {
                        "name": "deptId",
                        "in": "query",
                        "description": "Filter by department ID",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Teachers retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeachersResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeachersResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "tags": ["Teachers"],
                "summary": "Create a new teacher",
                "description": "Create a new teacher in the database.",
                "responses": {
                    "201": {
                        "description": "Teacher created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeacherResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeacherResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid or missing input data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required to create a teacher",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found - Department with specified ID does not exist",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict - Teacher with specified ID or email already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConflictErrorResponse"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TeacherInput"
                            }
                        }
                    }
                }
            }
        },
        "/teachers/{teacherId}": {
            "get": {
                "tags": ["Teachers"],
                "summary": "Get a teacher by ID",
                "description": "Retrieve a single teacher by their ID from the database.",
                "parameters": [
                    {
                        "name": "teacherId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Teacher ID to retrieve"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Teacher retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeacherResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeacherResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found - Teacher with specified ID does not exist",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "put": {
                "tags": ["Teachers"],
                "summary": "Update an existing teacher",
                "description": "Update an existing teacher by their ID.",
                "parameters": [
                    {
                        "name": "teacherId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Teacher updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeacherResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeacherResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid or missing input data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required to update a teacher",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found - Department / Teacher with specified ID does not exist",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    }
                },
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TeacherInput"
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Teachers"],
                "summary": "Delete an existing teacher",
                "description": "Delete a teacher by their ID from the database,",
                "parameters": [
                    {
                        "name": "teacherId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Teacher ID to delete"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Teacher deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeacherResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeacherResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Authentication required to delete a teacher",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/AuthenticationErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found - Teacher with specified ID does not exist",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/NotFoundErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Department": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "example": "object"
                    },
                    "properties": {
                        "type": "object",
                        "properties": {
                            "_id": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "MongoDB generated unique identifier"
                                    }
                                }
                            },
                            "deptId": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Custom department identifier"
                                    }
                                }
                            },
                            "deptName": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "String"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Name of the department"
                                    }
                                }
                            },
                            "location": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Location of the department"
                                    }
                                }
                            },
                            "deptEmail": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Email address of the department"
                                    }
                                }
                            }
                        }
                    }
                },
                "xml": {
                    "name": "Department"
                }
            },
            "DepartmentInput": {
                "type": "object",
                "properties": {
                    "example": {
                        "type": "object",
                        "properties": {
                            "deptId": {
                                "type": "string",
                                "example": "CSEE"
                            },
                            "deptName": {
                                "type": "string",
                                "example": "Computer Science and Electrical Engineering"
                            },
                            "location": {
                                "type": "string",
                                "example": "Austin Building"
                            },
                            "deptEmail": {
                                "type": "string",
                                "example": "csee@university.edu"
                            }
                        }
                    }
                },
                "xml": {
                    "name": "DepartmentInput"
                }
            },
            "DepartmentResponse": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "example": "object"
                    },
                    "properties": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "boolean"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Indicates if request was successful"
                                    }
                                }
                            },
                            "message": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Response message"
                                    }
                                }
                            },
                            "data": {
                                "xml": {
                                    "name": "department"
                                },
                                "$ref": "#/components/schemas/Department"
                            }
                        }
                    }
                },
                "xml": {
                    "name": "DepartmentResponse"
                }
            },
            "DepartmentsResponse": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "example": "object"
                    },
                    "properties": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "boolean"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Indicates if request was successful"
                                    }
                                }
                            },
                            "message": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Response message"
                                    }
                                }
                            },
                            "data": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "array"
                                    },
                                    "items": {
                                        "xml": {
                                            "name": "department"
                                        },
                                        "$ref": "#/components/schemas/Department"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Array of department objects"
                                    }
                                }
                            }
                        }
                    }
                },
                "xml": {
                    "name": "DepartmentsResponse"
                }
            },
            "Teacher": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "example": "object"
                    },
                    "properties": {
                        "type": "object",
                        "properties": {
                            "_id": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "MongoDB generated unique identifier"
                                    }
                                }
                            },
                            "teacherId": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Custom teacher identifier"
                                    }
                                }
                            },
                            "firstName": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "First name of teacher"
                                    }
                                }
                            },
                            "lastName": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Last name of teacher"
                                    }
                                }
                            },
                            "email": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Email address of teacher"
                                    }
                                }
                            },
                            "deptId": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Department identifier"
                                    }
                                }
                            },
                            "courses": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "array"
                                    },
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string",
                                                "example": "string"
                                            },
                                            "description": {
                                                "type": "string",
                                                "example": "Course ID (e.g., CSE110)"
                                            }
                                        }
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "List of course IDs taught by the teacher"
                                    }
                                }
                            }
                        }
                    }
                },
                "xml": {
                    "name": "Teacher"
                }
            },
            "TeacherInput": {
                "type": "object",
                "properties": {
                    "teacherId": {
                        "type": "string",
                        "example": "T001"
                    },
                    "firstName": {
                        "type": "string",
                        "example": "Michael"
                    },
                    "lastName": {
                        "type": "string",
                        "example": "Brown"
                    },
                    "email": {
                        "type": "string",
                        "example": "michael.brown@example.com"
                    },
                    "deptId": {
                        "type": "string",
                        "example": "CSEE"
                    },
                    "courses": {
                        "type": "array",
                        "example": ["CSE110", "CSE120"],
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "xml": {
                    "name": "TeacherInput"
                }
            },
            "TeacherResponse": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "example": "object"
                    },
                    "properties": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "boolean"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Indicates if request was successful"
                                    }
                                }
                            },
                            "message": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Response message"
                                    }
                                }
                            },
                            "data": {
                                "xml": {
                                    "name": "teacher"
                                },
                                "$ref": "#/components/schemas/Teacher"
                            }
                        }
                    }
                },
                "xml": {
                    "name": "TeacherResponse"
                }
            },
            "TeachersResponse": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "example": "object"
                    },
                    "properties": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "boolean"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Indicates if request was successful"
                                    }
                                }
                            },
                            "message": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Response message"
                                    }
                                }
                            },
                            "data": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "array"
                                    },
                                    "items": {
                                        "xml": {
                                            "name": "teacher"
                                        },
                                        "$ref": "#/components/schemas/Teacher"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Array of teacher objects"
                                    }
                                }
                            }
                        }
                    }
                },
                "xml": {
                    "name": "TeachersResponse"
                }
            },
            "Student": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "example": "object"
                    },
                    "properties": {
                        "type": "object",
                        "properties": {
                            "_id": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "MongoDB generated unique identifier"
                                    }
                                }
                            },
                            "studentId": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Custom student identifier"
                                    }
                                }
                            },
                            "firstName": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "First name of student"
                                    }
                                }
                            },
                            "lastName": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Last name of student"
                                    }
                                }
                            },
                            "email": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Email address of student"
                                    }
                                }
                            },
                            "major": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Major field of study"
                                    }
                                }
                            },
                            "status": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Enrollment status of student"
                                    }
                                }
                            },
                            "GPA": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "number"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Grade Point Average of student"
                                    }
                                }
                            },
                            "enrollmentDate": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Enrollment date of student"
                                    }
                                }
                            },
                            "courses": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "array"
                                    },
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string",
                                                "example": "string"
                                            },
                                            "description": {
                                                "type": "string",
                                                "example": "Course ID (e.g., CSE110)"
                                            }
                                        }
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "List of course IDs enrolled by the student"
                                    }
                                }
                            }
                        }
                    }
                },
                "xml": {
                    "name": "Student"
                }
            },
            "StudentInput": {
                "type": "object",
                "properties": {
                    "studentId": {
                        "type": "string",
                        "example": "S001"
                    },
                    "firstName": {
                        "type": "string",
                        "example": "Student"
                    },
                    "lastName": {
                        "type": "string",
                        "example": "One"
                    },
                    "email": {
                        "type": "string",
                        "example": "student.one@example.com"
                    },
                    "major": {
                        "type": "string",
                        "example": "Computer Science"
                    },
                    "status": {
                        "type": "string",
                        "example": "active"
                    },
                    "GPA": {
                        "type": "number",
                        "example": 3.5
                    },
                    "enrollmentDate": {
                        "type": "string",
                        "example": "2023-01-01"
                    },
                    "courses": {
                        "type": "array",
                        "example": ["CSE110", "CSE120"],
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "xml": {
                    "name": "StudentInput"
                }
            },
            "StudentResponse": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "example": "object"
                    },
                    "properties": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "boolean"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Indicates if the operation was successful"
                                    }
                                }
                            },
                            "message": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Response message"
                                    }
                                }
                            },
                            "data": {
                                "xml": {
                                    "name": "student"
                                },
                                "$ref": "#/components/schemas/Student"
                            }
                        }
                    }
                },
                "xml": {
                    "name": "StudentResponse"
                }
            },
            "StudentsResponse": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "example": "object"
                    },
                    "properties": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "boolean"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Indicates if the operation was successful"
                                    }
                                }
                            },
                            "message": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Response message"
                                    }
                                }
                            },
                            "data": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "array"
                                    },
                                    "items": {
                                        "xml": {
                                            "name": "student"
                                        },
                                        "$ref": "#/components/schemas/Student"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Array of student objects"
                                    }
                                }
                            }
                        }
                    }
                },
                "xml": {
                    "name": "StudentsResponse"
                }
            },
            "Course": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "example": "object"
                    },
                    "properties": {
                        "type": "object",
                        "properties": {
                            "_id": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "MongoDB generated unique identifier"
                                    }
                                }
                            },
                            "courseId": {
                                "type": "object",
                                "properties": {
                                    "tpye": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Custom course identifier"
                                    }
                                }
                            },
                            "courseName": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Name of the course"
                                    }
                                }
                            },
                            "deptId": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Department ID to which the course belongs"
                                    }
                                }
                            },
                            "teacherId": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Teacher ID who teaches the course"
                                    }
                                }
                            },
                            "credits": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "number"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Number of credits for the course"
                                    }
                                }
                            }
                        }
                    }
                },
                "xml": {
                    "name": "Course"
                }
            },
            "CourseInput": {
                "type": "object",
                "properties": {
                    "courseId": {
                        "type": "string",
                        "example": "CSE110"
                    },
                    "courseName": {
                        "type": "string",
                        "example": "Introduction to Computer Science"
                    },
                    "deptId": {
                        "type": "string",
                        "example": "CSEE"
                    },
                    "teacherId": {
                        "type": "string",
                        "example": "T001"
                    },
                    "credits": {
                        "type": "number",
                        "example": 3
                    }
                },
                "xml": {
                    "name": "CourseInput"
                }
            },
            "CourseResponse": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "example": "object"
                    },
                    "properties": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "boolean"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Indicates if the operation was successful"
                                    }
                                }
                            },
                            "message": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Response message"
                                    }
                                }
                            },
                            "data": {
                                "xml": {
                                    "name": "course"
                                },
                                "$ref": "#/components/schemas/Course"
                            }
                        }
                    }
                },
                "xml": {
                    "name": "CourseResponse"
                }
            },
            "CoursesResponse": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "example": "object"
                    },
                    "properties": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "boolean"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Indicates if the operation was successful"
                                    }
                                }
                            },
                            "message": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Response message"
                                    }
                                }
                            },
                            "data": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "array"
                                    },
                                    "items": {
                                        "xml": {
                                            "name": "course"
                                        },
                                        "$ref": "#/components/schemas/Course"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Array of course objects"
                                    }
                                }
                            }
                        }
                    }
                },
                "xml": {
                    "name": "CoursesResponse"
                }
            },
            "ErrorResponse": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "example": "Object"
                    },
                    "properties": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "boolean"
                                    },
                                    "example": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Indicates request failed"
                                    }
                                }
                            },
                            "message": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Error message describing the issue"
                                    },
                                    "example": {
                                        "type": "string",
                                        "example": "An error occurred"
                                    }
                                }
                            },
                            "error": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Detailed error information"
                                    },
                                    "example": {
                                        "type": "string",
                                        "example": "Validation error: 'courseName' is required"
                                    }
                                }
                            }
                        }
                    }
                },
                "xml": {
                    "name": "ErrorResponse"
                }
            },
            "ValidationErrorResponse": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "example": "object"
                    },
                    "properties": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "boolean"
                                    },
                                    "example": {
                                        "type": "boolean",
                                        "example": false
                                    }
                                }
                            },
                            "message": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "example": {
                                        "type": "string",
                                        "example": "Validation failed"
                                    }
                                }
                            },
                            "error": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "example": {
                                        "type": "string",
                                        "example": "courseId is required"
                                    }
                                }
                            },
                            "details": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "array"
                                    },
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "type": {
                                                "type": "string",
                                                "example": "object"
                                            },
                                            "properties": {
                                                "type": "object",
                                                "properties": {
                                                    "field": {
                                                        "type": "object",
                                                        "properties": {
                                                            "type": {
                                                                "type": "string",
                                                                "example": "string"
                                                            },
                                                            "example": {
                                                                "type": "string",
                                                                "example": "courseId"
                                                            }
                                                        }
                                                    },
                                                    "message": {
                                                        "type": "object",
                                                        "properties": {
                                                            "type": {
                                                                "type": "string",
                                                                "example": "string"
                                                            },
                                                            "example": {
                                                                "type": "string",
                                                                "example": "courseId is required"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "xml": {
                    "name": "ValidationErrorResponse"
                }
            },
            "ConflictErrorResponse": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "example": "object"
                    },
                    "properties": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "boolean"
                                    },
                                    "example": {
                                        "type": "boolean",
                                        "example": false
                                    }
                                }
                            },
                            "message": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "example": {
                                        "type": "string",
                                        "example": "Resource already exists"
                                    }
                                }
                            },
                            "error": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "example": {
                                        "type": "string",
                                        "example": "Course with ID CSE101 already exists"
                                    }
                                }
                            },
                            "conflictField": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "example": {
                                        "type": "string",
                                        "example": "courseId"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "The field that caused the conflict"
                                    }
                                }
                            }
                        }
                    }
                },
                "xml": {
                    "name": "ConflictErrorResponse"
                }
            },
            "NotFoundErrorResponse": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "example": "object"
                    },
                    "properties": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "boolean"
                                    },
                                    "example": {
                                        "type": "boolean",
                                        "example": false
                                    }
                                }
                            },
                            "message": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "example": {
                                        "type": "string",
                                        "example": "Resource not found"
                                    }
                                }
                            },
                            "error": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "example": {
                                        "type": "string",
                                        "example": "Teacher with ID T001 does not exist"
                                    }
                                }
                            }
                        }
                    }
                },
                "xml": {
                    "name": "NotFoundErrorResponse"
                }
            },
            "AuthenticationErrorResponse": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "string",
                        "example": "object"
                    },
                    "properties": {
                        "type": "object",
                        "properties": {
                            "success": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "boolean"
                                    },
                                    "example": {
                                        "type": "boolean",
                                        "example": false
                                    }
                                }
                            },
                            "message": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "example": {
                                        "type": "string",
                                        "example": "Authentication required"
                                    }
                                }
                            },
                            "error": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "string"
                                    },
                                    "example": {
                                        "type": "string",
                                        "example": "Invalid or missing authentication token"
                                    }
                                }
                            }
                        }
                    }
                },
                "xml": {
                    "name": "AuthenticationErrorResponse"
                }
            }
        }
    }
}
