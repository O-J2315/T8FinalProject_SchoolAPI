{
  "openapi": "3.0.0",
  "info": {
    "title": "School Management API",
    "description": "API documentation for managing School resources",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000/"
    },
    {
      "url": "https://t8finalproject-schoolapi.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Home",
      "description": "Home page"
    },
    {
      "name": "Departments",
      "description": "Department management operations"
    },
    {
      "name": "Teachers",
      "description": "Teacher management operations"
    },
    {
      "name": "Courses",
      "description": "Course management operations (WIP)"
    },
    {
      "name": "Students",
      "description": "Student management operations (WIP)"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "tags": [
          "Home"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/courses/": {
      "get": {
        "tags": [
          "Courses"
        ],
        "description": "",
        "parameters": [
          {
            "name": "teacherId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "deptId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Courses"
        ],
        "description": "",
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/courses/{courseId}": {
      "get": {
        "tags": [
          "Courses"
        ],
        "description": "",
        "parameters": [
          {
            "name": "courseId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Courses"
        ],
        "description": "",
        "parameters": [
          {
            "name": "courseId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Courses"
        ],
        "description": "",
        "parameters": [
          {
            "name": "courseId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/departments/": {
      "get": {
        "tags": [
          "Departments"
        ],
        "summary": "Get all departments",
        "description": "Retrieves all departments from the database.",
        "responses": {
          "200": {
            "description": "Departments retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DepartmentsResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DepartmentsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Departments"
        ],
        "summary": "Create a new department",
        "description": "Create a new department in the database.",
        "responses": {
          "201": {
            "description": "Department created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DepartmentResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DepartmentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict - Department with same ID already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictErrorResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DepartmentInput"
              }
            }
          }
        }
      }
    },
    "/departments/{deptId}": {
      "get": {
        "tags": [
          "Departments"
        ],
        "summary": "Get a department by ID",
        "description": "Retrieves a single department by its ID from the database.",
        "parameters": [
          {
            "name": "deptId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Deparment ID to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "Department retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DepartmentResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DepartmentResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found - Department with specified ID does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Departments"
        ],
        "summary": "Update an existing department",
        "description": "Update an existing department by its ID.",
        "parameters": [
          {
            "name": "deptId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Department updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DepartmentResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DepartmentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found - Department with specified ID does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DepartmentInput"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Departments"
        ],
        "summary": "Delete an existing department",
        "description": "Delete a department by its ID from the database.",
        "parameters": [
          {
            "name": "deptId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Deparment ID to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Department deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DepartmentResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/DepartmentResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found - Department with specified ID does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/students/": {
      "get": {
        "tags": [
          "Students"
        ],
        "description": "",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "major",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Students"
        ],
        "description": "",
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "studentId": {
                    "example": "any"
                  },
                  "firstName": {
                    "example": "any"
                  },
                  "lastName": {
                    "example": "any"
                  },
                  "email": {
                    "example": "any"
                  },
                  "major": {
                    "example": "any"
                  },
                  "status": {
                    "example": "any"
                  },
                  "GPA": {
                    "example": "any"
                  },
                  "enrollmentDate": {
                    "example": "any"
                  },
                  "courses": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/students/{studentId}": {
      "get": {
        "tags": [
          "Students"
        ],
        "description": "",
        "parameters": [
          {
            "name": "studentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Students"
        ],
        "description": "",
        "parameters": [
          {
            "name": "studentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Students"
        ],
        "description": "",
        "parameters": [
          {
            "name": "studentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/teachers/": {
      "get": {
        "tags": [
          "Teachers"
        ],
        "summary": "Get all teachers",
        "description": "Retrieve all teachers, optionally filtering by department ID.",
        "parameters": [
          {
            "name": "deptId",
            "in": "query",
            "description": "Filter by department ID",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Teachers retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeachersResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TeachersResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Teachers"
        ],
        "summary": "Create a new teacher",
        "description": "Create a new teacher in the database.",
        "responses": {
          "201": {
            "description": "Teacher created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeacherResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TeacherResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found - Department with specified ID does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorResponse"
                }
              }
            }
          },
          "409": {
            "description": "Conflict - Teacher with same ID already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictErrorResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ConflictErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeacherInput"
              }
            }
          }
        }
      }
    },
    "/teachers/{teacherId}": {
      "get": {
        "tags": [
          "Teachers"
        ],
        "summary": "Get a teacher by ID",
        "description": "Retrieve a single teacher by their ID from the database.",
        "parameters": [
          {
            "name": "teacherId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Teacher ID to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "Teacher retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeacherResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TeacherResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found - Teacher with specified ID does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Teachers"
        ],
        "summary": "Update an existing teacher",
        "description": "Update an existing teacher by their ID.",
        "parameters": [
          {
            "name": "teacherId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Teacher updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeacherResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TeacherResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ValidationErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found - Department / Teacher with specified ID does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorResponse"
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TeacherInput"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Teachers"
        ],
        "summary": "Delete an existing teacher",
        "description": "Delete a teacher by their ID from the database,",
        "parameters": [
          {
            "name": "teacherId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Teacher ID to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "Teacher deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TeacherResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/TeacherResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found - Teacher with specified ID does not exist",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorResponse"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Department": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "object"
          },
          "properties": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "MongoDB generated unique identifier"
                  }
                }
              },
              "deptId": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "Custom department identifier"
                  }
                }
              },
              "deptName": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "String"
                  },
                  "description": {
                    "type": "string",
                    "example": "Name of the department"
                  }
                }
              },
              "location": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "Location of the department"
                  }
                }
              },
              "deptEmail": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "Email address of the department"
                  }
                }
              }
            }
          }
        },
        "xml": {
          "name": "Department"
        }
      },
      "DepartmentInput": {
        "type": "object",
        "properties": {
          "example": {
            "type": "object",
            "properties": {
              "deptId": {
                "type": "string",
                "example": "CSEE"
              },
              "deptName": {
                "type": "string",
                "example": "Computer Science and Electrical Engineering"
              },
              "location": {
                "type": "string",
                "example": "Austin Building"
              },
              "deptEmail": {
                "type": "string",
                "example": "csee@university.edu"
              }
            }
          }
        },
        "xml": {
          "name": "DepartmentInput"
        }
      },
      "DepartmentResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "object"
          },
          "properties": {
            "type": "object",
            "properties": {
              "success": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "boolean"
                  },
                  "description": {
                    "type": "string",
                    "example": "Indicates if request was successful"
                  }
                }
              },
              "message": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "Response message"
                  }
                }
              },
              "data": {
                "xml": {
                  "name": "department"
                },
                "$ref": "#/components/schemas/Department"
              }
            }
          }
        },
        "xml": {
          "name": "DepartmentResponse"
        }
      },
      "DepartmentsResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "object"
          },
          "properties": {
            "type": "object",
            "properties": {
              "success": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "boolean"
                  },
                  "description": {
                    "type": "string",
                    "example": "Indicates if request was successful"
                  }
                }
              },
              "message": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "Response message"
                  }
                }
              },
              "data": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "array"
                  },
                  "items": {
                    "xml": {
                      "name": "department"
                    },
                    "$ref": "#/components/schemas/Department"
                  },
                  "description": {
                    "type": "string",
                    "example": "Array of department objects"
                  }
                }
              }
            }
          }
        },
        "xml": {
          "name": "DepartmentsResponse"
        }
      },
      "Teacher": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "object"
          },
          "properties": {
            "type": "object",
            "properties": {
              "_id": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "MongoDB generated unique identifier"
                  }
                }
              },
              "teacherId": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "Custom teacher identifier"
                  }
                }
              },
              "firstName": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "First name of teacher"
                  }
                }
              },
              "lastName": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "Last name of teacher"
                  }
                }
              },
              "email": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "Email address of teacher"
                  }
                }
              },
              "deptId": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "Department identifier"
                  }
                }
              },
              "courses": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "array"
                  },
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "example": "string"
                      },
                      "description": {
                        "type": "string",
                        "example": "Array of course identifiers taught by the teacher"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "xml": {
          "name": "Teacher"
        }
      },
      "TeacherInput": {
        "type": "object",
        "properties": {
          "example": {
            "type": "object",
            "properties": {
              "teacherId": {
                "type": "string",
                "example": "T001"
              },
              "firstName": {
                "type": "string",
                "example": "Michael"
              },
              "lastName": {
                "type": "string",
                "example": "Brown"
              },
              "email": {
                "type": "string",
                "example": "michael.brown@example.com"
              },
              "deptId": {
                "type": "string",
                "example": "CSEE"
              },
              "courses": {
                "type": "array",
                "example": [
                  "CSE_110",
                  "CSE_120"
                ],
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "xml": {
          "name": "TeacherInput"
        }
      },
      "TeacherResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "object"
          },
          "properties": {
            "type": "object",
            "properties": {
              "success": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "boolean"
                  },
                  "description": {
                    "type": "string",
                    "example": "Indicates if request was successful"
                  }
                }
              },
              "message": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "Response message"
                  }
                }
              },
              "data": {
                "xml": {
                  "name": "teacher"
                },
                "$ref": "#/components/schemas/Teacher"
              }
            }
          }
        },
        "xml": {
          "name": "TeacherResponse"
        }
      },
      "TeachersResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "object"
          },
          "properties": {
            "type": "object",
            "properties": {
              "success": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "boolean"
                  },
                  "description": {
                    "type": "string",
                    "example": "Indicates if request was successful"
                  }
                }
              },
              "message": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "Response message"
                  }
                }
              },
              "data": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "array"
                  },
                  "items": {
                    "xml": {
                      "name": "teacher"
                    },
                    "$ref": "#/components/schemas/Teacher"
                  },
                  "description": {
                    "type": "string",
                    "example": "Array of teacher objects"
                  }
                }
              }
            }
          }
        },
        "xml": {
          "name": "TeachersResponse"
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "Object"
          },
          "properties": {
            "type": "object",
            "properties": {
              "success": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "boolean"
                  },
                  "example": {
                    "type": "boolean",
                    "example": false
                  },
                  "description": {
                    "type": "string",
                    "example": "Indicates request failed"
                  }
                }
              },
              "message": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "Error message describing the issue"
                  },
                  "example": {
                    "type": "string",
                    "example": "An error occurred"
                  }
                }
              },
              "error": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "Detailed error information"
                  },
                  "example": {
                    "type": "string",
                    "example": "Validation error: 'courseName' is required"
                  }
                }
              }
            }
          }
        },
        "xml": {
          "name": "ErrorResponse"
        }
      },
      "ValidationErrorResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "object"
          },
          "properties": {
            "type": "object",
            "properties": {
              "success": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "boolean"
                  },
                  "example": {
                    "type": "boolean",
                    "example": false
                  }
                }
              },
              "message": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "example": {
                    "type": "string",
                    "example": "Validation failed"
                  }
                }
              },
              "error": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "example": {
                    "type": "string",
                    "example": "courseId is required"
                  }
                }
              },
              "details": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "array"
                  },
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "example": "object"
                      },
                      "properties": {
                        "type": "object",
                        "properties": {
                          "field": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "example": "string"
                              },
                              "example": {
                                "type": "string",
                                "example": "courseId"
                              }
                            }
                          },
                          "message": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "example": "string"
                              },
                              "example": {
                                "type": "string",
                                "example": "courseId is required"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "xml": {
          "name": "ValidationErrorResponse"
        }
      },
      "ConflictErrorResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "object"
          },
          "properties": {
            "type": "object",
            "properties": {
              "success": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "boolean"
                  },
                  "example": {
                    "type": "boolean",
                    "example": false
                  }
                }
              },
              "message": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "example": {
                    "type": "string",
                    "example": "Resource already exists"
                  }
                }
              },
              "error": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "example": {
                    "type": "string",
                    "example": "Course with ID CSE_101 already exists"
                  }
                }
              },
              "conflictField": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "example": {
                    "type": "string",
                    "example": "courseId"
                  },
                  "description": {
                    "type": "string",
                    "example": "The field that caused the conflict"
                  }
                }
              }
            }
          }
        },
        "xml": {
          "name": "ConflictErrorResponse"
        }
      },
      "NotFoundErrorResponse": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "object"
          },
          "properties": {
            "type": "object",
            "properties": {
              "success": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "boolean"
                  },
                  "example": {
                    "type": "boolean",
                    "example": false
                  }
                }
              },
              "message": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "example": {
                    "type": "string",
                    "example": "Resource not found"
                  }
                }
              },
              "error": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "example": {
                    "type": "string",
                    "example": "Teacher with ID T001 does not exist"
                  }
                }
              }
            }
          }
        },
        "xml": {
          "name": "NotFoundErrorResponse"
        }
      }
    }
  }
}